@model Graduation_Project.ViewModels.AccountProfileViewModel
@using System
@{
    ViewData["Title"] = "My Account";
}

<div class="container my-5">
    <div class="row">
        <!-- Sidebar -->
        <partial name="_AccountSidebar" />

        <!-- Main Content -->
        <div class="col-md-9">
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success alert-dismissible fade show mb-4" role="alert">
                    @TempData["SuccessMessage"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <div class="row mb-4">
                <div class="col-md-4">
                    <div class="card dashboard-card shadow-sm h-100">
                        <div class="card-body text-center">
                            <div class="icon-container">
                                <i class="bi bi-box-seam"></i>
                            </div>
                            <h5>@ViewBag.OrderCount</h5>
                            <p class="text-muted mb-0">Orders</p>
                            <a asp-controller="Order" asp-action="History" class="stretched-link"></a>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card dashboard-card shadow-sm h-100">
                        <div class="card-body text-center">
                            <div class="icon-container">
                                <i class="bi bi-geo-alt"></i>
                            </div>
                            <h5>@ViewBag.AddressCount</h5>
                            <p class="text-muted mb-0">Addresses</p>
                            <a asp-controller="Address" asp-action="Index" class="stretched-link"></a>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card dashboard-card shadow-sm h-100">
                        <div class="card-body text-center">
                            <div class="icon-container">
                                <i class="bi bi-heart"></i>
                            </div>
                            <h5>@ViewBag.WishlistCount</h5>
                            <p class="text-muted mb-0">Wishlist Items</p>
                            <a asp-controller="Wishlist" asp-action="Index" class="stretched-link"></a>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card profile-info-card shadow mb-4">
                <div class="card-header bg-light d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Account Information</h5>
                    <a asp-action="EditProfile" class="btn btn-outline-primary btn-sm">
                        <i class="bi bi-pencil"></i> Edit
                    </a>
                </div>
                <div class="card-body">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <p class="mb-1 text-muted">Full Name</p>
                            <p class="mb-0 fw-medium">@Model.User.FirstName @Model.User.LastName</p>
                        </div>
                        <div class="col-md-6">
                            <p class="mb-1 text-muted">Email</p>
                            <p class="mb-0 fw-medium">@Model.User.Email</p>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <p class="mb-1 text-muted">Phone</p>
                            <p class="mb-0 fw-medium">@(string.IsNullOrEmpty(Model.User.Phone) ? "Not provided" : Model.User.Phone)</p>
                        </div>
                        <div class="col-md-6">
                            <p class="mb-1 text-muted">Gender</p>
                            <p class="mb-0 fw-medium">@(string.IsNullOrEmpty(Model.User.Gender) ? "Not provided" : Model.User.Gender)</p>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <p class="mb-1 text-muted">Date of Birth</p>
                            <p class="mb-0 fw-medium">
                                @(Model.User.DateOfBirth != null ? ((DateTime)Model.User.DateOfBirth).ToString("MMMM d, yyyy") : "Not provided")
                            </p>
                        </div>
                        <div class="col-md-6">
                            <p class="mb-1 text-muted">Member Since</p>
                            <p class="mb-0 fw-medium">@Model.User.RegistrationDate.ToString("MMMM d, yyyy")</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Recent Orders Section -->
            <div class="card profile-info-card shadow mb-4">
                <div class="card-header bg-light d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Recent Orders</h5>
                    <a asp-controller="Order" asp-action="History" class="btn btn-outline-primary btn-sm">
                        <i class="bi bi-list"></i> View All
                    </a>
                </div>
                <div class="card-body">
                    @if (ViewBag.OrderCount > 0)
                    {
                        <div class="text-center py-4">
                            <i class="bi bi-bag-check" style="font-size: 3rem; color: #28a745;"></i>
                            <p class="mt-3">You have @ViewBag.OrderCount order(s).</p>
                            <a asp-controller="Order" asp-action="History" class="btn btn-primary mt-2">View Order History</a>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="bi bi-bag-x" style="font-size: 3rem; color: #ccc;"></i>
                            <p class="mt-3 text-muted">You haven't placed any orders yet.</p>
                            <a asp-controller="Home" asp-action="Shop" class="btn btn-primary mt-2">Start Shopping</a>
                        </div>
                    }
                </div>
            </div>

            <!-- Addresses Section -->
            <div class="card profile-info-card shadow">
                <div class="card-header bg-light d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">My Addresses</h5>
                    <a asp-controller="Address" asp-action="Create" class="btn btn-outline-primary btn-sm">
                        <i class="bi bi-plus-lg"></i> Add New
                    </a>
                </div>
                <div class="card-body">
                    @if (ViewBag.AddressCount > 0)
                    {
                        <div class="text-center py-4">
                            <i class="bi bi-geo-alt-fill" style="font-size: 3rem; color: #0d6efd;"></i>
                            <p class="mt-3">You have @ViewBag.AddressCount address(es) saved.</p>
                            <a asp-controller="Address" asp-action="Index" class="btn btn-primary mt-2">View All Addresses</a>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="bi bi-geo-alt" style="font-size: 3rem; color: #ccc;"></i>
                            <p class="mt-3 text-muted">You haven't added any addresses yet.</p>
                            <a asp-controller="Address" asp-action="Create" class="btn btn-primary mt-2">Add Address</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* General Layout */
    .container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 15px;
    }

    .row {
        display: flex;
        flex-wrap: wrap;
        margin: 0 -15px;
        width: 100%;
    }

    .col-md-9,
    .col-md-4 {
        padding: 0 15px;
    }

    /* Cards */
    .dashboard-card {
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border: none;
        border-radius: 10px;
        background: #fff;
        cursor: pointer;
        position: relative;
        overflow: hidden;
    }

        .dashboard-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        }

        .dashboard-card .card-body {
            padding: 20px;
        }

    .icon-container {
        font-size: 2.5rem;
        color: #0d6efd;
        margin-bottom: 15px;
    }

    .dashboard-card h5 {
        font-size: 1.75rem;
        font-weight: 600;
        color: #333;
        margin: 0;
    }

    .dashboard-card p {
        font-size: 0.9rem;
        color: #6c757d;
    }

    .stretched-link::after {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        z-index: 1;
        content: "";
    }

    /* Profile Info Card */
    .profile-info-card {
        border: none;
        border-radius: 10px;
        background: #fff;
    }

        .profile-info-card .card-header {
            border-bottom: 1px solid #e9ecef;
            padding: 15px 20px;
            background: #f8f9fa;
        }

        .profile-info-card .card-body {
            padding: 20px;
        }

        .profile-info-card p.text-muted {
            font-size: 0.85rem;
            color: #6c757d;
        }

        .profile-info-card p.fw-medium {
            font-size: 1rem;
            color: #333;
        }

    /* Buttons */
    .btn-primary {
        background-color: #0d6efd;
        border-color: #0d6efd;
        border-radius: 5px;
        padding: 8px 16px;
        transition: background-color 0.3s ease;
    }

        .btn-primary:hover {
            background-color: #005cbf;
            border-color: #005cbf;
        }

    .btn-outline-primary {
        border-radius: 5px;
        padding: 6px 12px;
    }

    /* Alerts */
    .alert-success {
        border-radius: 5px;
        padding: 15px;
        font-size: 0.9rem;
    }

    .btn-close {
        font-size: 0.8rem;
    }



    .col-md-9 {
        margin-top: 20px;
    }

    .dashboard-card h5 {
        font-size: 1.5rem;
    }

    .icon-container {
        font-size: 2rem;
    }

    }</style>

<script>
    // Handle alert dismissal
    document.querySelectorAll('.alert .btn-close').forEach(button => {
        button.addEventListener('click', () => {
            const alert = button.closest('.alert');
            alert.classList.remove('show');
            setTimeout(() => alert.remove(), 150);
        });
    });

    // Add hover effect for dashboard cards
    document.querySelectorAll('.dashboard-card').forEach(card => {
        card.addEventListener('mouseenter', () => {
            card.style.transform = 'translateY(-5px)';
            card.style.boxShadow = '0 6px 12px rgba(0, 0, 0, 0.1)';
        });
        card.addEventListener('mouseleave', () => {
            card.style.transform = 'translateY(0)';
            card.style.boxShadow = '0 4px 6px rgba(0, 0, 0, 0.05)';
        });
    });

    // Add click animation for buttons
    document.querySelectorAll('.btn-primary, .btn-outline-primary').forEach(button => {
        button.addEventListener('click', () => {
            button.style.transform = 'scale(0.95)';
            setTimeout(() => {
                button.style.transform = 'scale(1)';
            }, 100);
        });
    });
</script>