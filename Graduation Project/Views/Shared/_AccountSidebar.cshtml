@inject IHttpContextAccessor HttpContextAccessor

@{
    var controller = ViewContext.RouteData.Values["controller"]?.ToString();
    var action = ViewContext.RouteData.Values["action"]?.ToString();

    string userName = HttpContextAccessor.HttpContext.Session.GetString("UserName") ?? "User";
    string userEmail = HttpContextAccessor.HttpContext.Session.GetString("UserEmail") ?? "";

    bool IsActive(string checkController, params string[] checkActions)
    {
        if (checkController.Equals(controller, StringComparison.OrdinalIgnoreCase))
        {
            if (checkActions == null || checkActions.Length == 0)
                return true;
            return checkActions.Any(a => a.Equals(action, StringComparison.OrdinalIgnoreCase));
        }
        return false;
    }
}

<div class="col-md-3 account-sidebar">
    <div class="card shadow-sm mb-4 centered-content">
        <div class="card-body text-center">
            <div class="mb-3">
                <i class="bi bi-person-circle" style="font-size: 5rem;"></i>
            </div>
            <h4>@userName</h4>
            <p class="text-muted">@userEmail</p>
        </div>
    </div>

    <div class="list-group shadow-sm centered-content">
        <a asp-controller="Account" asp-action="Profile"
           class="list-group-item list-group-item-action @(IsActive("Account", "Profile") ? "active" : "")">
            Dashboard
        </a>
@*         <a asp-controller="Account" asp-action="EditProfile"
           class="list-group-item list-group-item-action @(IsActive("Account", "EditProfile") ? "active" : "")" style=" margin-top:300px;">
            Edit Profile
        </a>
        <a asp-controller="Account" asp-action="ChangePassword"
           class="list-group-item list-group-item-action  @(IsActive("Account", "ChangePassword") ? "active" : "")" style=" margin-top:300px;">
            Change Password
        </a> *@
        <a asp-controller="Address" asp-action="Index"
           class="list-group-item list-group-item-action @(IsActive("Address", "Index") ? "active" : "")">
            My Addresses
        </a>
        <a asp-controller="Order" asp-action="History"
           class="list-group-item list-group-item-action @(IsActive("Order", "History") ? "active" : "")">
            Order History
        </a>
        <a asp-controller="Wishlist" asp-action="Index"
           class="list-group-item list-group-item-action @(IsActive("Wishlist", "Index") ? "active" : "")">
            Wishlist
        </a>
        <a asp-controller="Login" asp-action="Logout"
           class="list-group-item list-group-item-action text-danger">
            Logout
        </a>
    </div>
</div>

<style>
    /* Sidebar Container */
    .account-sidebar {
        margin-top: 300px;
        padding: 0 15px;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        min-height: calc(100vh - 60px); /* Adjust based on header height */
    }

    /* User Info Card and List Group */
    .centered-content {
        width: 100%;
        max-width: 300px; /* Adjust as needed */
        margin: 0 auto;
    }

    .account-sidebar .card {
        border: none;
        border-radius: 10px;
        background: #fff;
        transition: box-shadow 0.3s ease;
    }

        .account-sidebar .card:hover {
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
        }

    .account-sidebar .card-body {
        padding: 20px;
    }

    .account-sidebar .bi-person-circle {
        color: #0d6efd;
        transition: color 0.3s ease;
    }

    .account-sidebar .card:hover .bi-person-circle {
        color: #005cbf;
    }

    .account-sidebar h4 {
        font-size: 1.25rem;
        font-weight: 600;
        color: #333;
        margin: 0;
    }

    .account-sidebar p.text-muted {
        font-size: 0.9rem;
        color: #6c757d;
        margin: 0;
    }

    /* List Group */
    .list-group {
        border-radius: 10px;
        overflow: hidden;
        border: none;
    }

    .list-group-item {
        border: none;
        padding: 12px 20px;
        font-size: 0.95rem;
        font-weight: 500;
        color: #333;
        background: #fff;
        transition: background-color 0.3s ease, color 0.3s ease, padding-left 0.3s ease;
    }

        .list-group-item:hover {
            background-color: #f8f9fa;
            color: #0d6efd;
            padding-left: 25px;
        }

        .list-group-item.active {
            background-color: #0d6efd;
            color: #fff;
            border: none;
        }

            .list-group-item.active:hover {
                background-color: #005cbf;
                color: #fff;
            }

        .list-group-item.text-danger {
            color: #dc3545;
        }

            .list-group-item.text-danger:hover {
                background-color: #f8d7da;
                color: #b02a37;
            }

    /* Responsive Design */
   </style>

<script>
    // Add click animation for list group items
    document.querySelectorAll('.list-group-item').forEach(item => {
        item.addEventListener('click', () => {
            item.style.transform = 'scale(0.98)';
            setTimeout(() => {
                item.style.transform = 'scale(1)';
            }, 100);
        });
    });

    // Logout confirmation
    document.querySelector('.list-group-item.text-danger').addEventListener('click', (e) => {
        e.preventDefault();
        if (confirm('Are you sure you want to log out?')) {
            window.location.href = e.target.href;
        }
    });

    // Highlight active item on page load
    document.querySelectorAll('.list-group-item').forEach(item => {
        if (item.classList.contains('active')) {
            item.style.transition = 'background-color 0.3s ease';
        }
    });
</script>